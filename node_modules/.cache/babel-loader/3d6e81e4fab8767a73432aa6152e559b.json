{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\"; // color design tokens export\n\nexport const tokens = mode => ({ ...(mode === \"dark\" ? {\n    grey: {\n      100: \"#e0e0e0\",\n      200: \"#c2c2c2\",\n      300: \"#a3a3a3\",\n      400: \"#858585\",\n      500: \"#666666\",\n      600: \"#525252\",\n      700: \"#3d3d3d\",\n      800: \"#292929\",\n      900: \"#141414\"\n    },\n    primary: {\n      100: \"#f5e0c7\",\n      // light royal orange\n      200: \"#f3a063\",\n      // soft orange\n      300: \"#f27e3a\",\n      // vibrant orange\n      400: \"#e95d00\",\n      // royal orange\n      500: \"#c85400\",\n      // deep orange\n      600: \"#a14500\",\n      // dark orange\n      700: \"#7a3400\",\n      // rich orange\n      800: \"#5d2700\",\n      // burnt orange\n      900: \"#3f1a00\" // dark burnt orange\n\n    },\n    blueAccent: {\n      100: \"#c0d9f0\",\n      // light blue\n      200: \"#8cb8e2\",\n      // soft blue\n      300: \"#64a0d4\",\n      // pastel blue\n      400: \"#0076b4\",\n      // vibrant blue\n      500: \"#005f8d\",\n      // royal blue\n      600: \"#00476d\",\n      // deep blue\n      700: \"#003555\",\n      // dark blue\n      800: \"#002540\",\n      // navy blue\n      900: \"#001720\" // midnight blue\n\n    }\n  } : {\n    grey: {\n      100: \"#141414\",\n      200: \"#292929\",\n      300: \"#3d3d3d\",\n      400: \"#525252\",\n      500: \"#666666\",\n      600: \"#858585\",\n      700: \"#a3a3a3\",\n      800: \"#c2c2c2\",\n      900: \"#e0e0e0\"\n    },\n    primary: {\n      100: \"#3f1a00\",\n      // dark burnt orange\n      200: \"#5d2700\",\n      // burnt orange\n      300: \"#7a3400\",\n      // rich orange\n      400: \"#a14500\",\n      // dark orange\n      500: \"#e95d00\",\n      // royal orange\n      600: \"#f27e3a\",\n      // vibrant orange\n      700: \"#f3a063\",\n      // soft orange\n      800: \"#f5e0c7\",\n      // light royal orange\n      900: \"#d0d1d5\" // light gray for light mode\n\n    },\n    blueAccent: {\n      100: \"#001720\",\n      // midnight blue\n      200: \"#002540\",\n      // navy blue\n      300: \"#003555\",\n      // dark blue\n      400: \"#00476d\",\n      // deep blue\n      500: \"#005f8d\",\n      // royal blue\n      600: \"#0076b4\",\n      // vibrant blue\n      700: \"#64a0d4\",\n      // pastel blue\n      800: \"#8cb8e2\",\n      // soft blue\n      900: \"#c0d9f0\" // light blue\n\n    }\n  })\n}); // mui theme settings\n\nexport const themeSettings = mode => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\" ? {\n        primary: {\n          main: colors.primary[400]\n        },\n        secondary: {\n          main: colors.blueAccent[500]\n        },\n        neutral: {\n          dark: colors.grey[700],\n          main: colors.grey[500],\n          light: colors.grey[100]\n        },\n        background: {\n          default: colors.primary[500]\n        }\n      } : {\n        primary: {\n          main: colors.primary[600]\n        },\n        secondary: {\n          main: colors.blueAccent[500]\n        },\n        neutral: {\n          dark: colors.grey[700],\n          main: colors.grey[500],\n          light: colors.grey[100]\n        },\n        background: {\n          default: \"#fcfcfc\"\n        }\n      })\n    },\n    typography: {\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      h1: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 40\n      },\n      h2: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 32\n      },\n      h3: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 24\n      },\n      h4: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 20\n      },\n      h5: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 16\n      },\n      h6: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 14\n      }\n    }\n  };\n}; // context for color mode\n\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nexport const useMode = () => {\n  _s();\n\n  const [mode, setMode] = useState(\"dark\");\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => setMode(prev => prev === \"light\" ? \"dark\" : \"light\")\n  }), []);\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n\n_s(useMode, \"JBrsToO8CgNNR6W975vCZAb5vaI=\");","map":{"version":3,"names":["createContext","useState","useMemo","createTheme","tokens","mode","grey","primary","blueAccent","themeSettings","colors","palette","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","ColorModeContext","toggleColorMode","useMode","setMode","colorMode","prev","theme"],"sources":["D:/Afstuderen/react-admin-dashboard/src/theme.js"],"sourcesContent":["import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens export\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n        },\r\n        primary: {\r\n          100: \"#f5e0c7\", // light royal orange\r\n          200: \"#f3a063\", // soft orange\r\n          300: \"#f27e3a\", // vibrant orange\r\n          400: \"#e95d00\", // royal orange\r\n          500: \"#c85400\", // deep orange\r\n          600: \"#a14500\", // dark orange\r\n          700: \"#7a3400\", // rich orange\r\n          800: \"#5d2700\", // burnt orange\r\n          900: \"#3f1a00\", // dark burnt orange\r\n        },\r\n        blueAccent: {\r\n          100: \"#c0d9f0\", // light blue\r\n          200: \"#8cb8e2\", // soft blue\r\n          300: \"#64a0d4\", // pastel blue\r\n          400: \"#0076b4\", // vibrant blue\r\n          500: \"#005f8d\", // royal blue\r\n          600: \"#00476d\", // deep blue\r\n          700: \"#003555\", // dark blue\r\n          800: \"#002540\", // navy blue\r\n          900: \"#001720\", // midnight blue\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#141414\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#525252\",\r\n          500: \"#666666\",\r\n          600: \"#858585\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n        },\r\n        primary: {\r\n          100: \"#3f1a00\", // dark burnt orange\r\n          200: \"#5d2700\", // burnt orange\r\n          300: \"#7a3400\", // rich orange\r\n          400: \"#a14500\", // dark orange\r\n          500: \"#e95d00\", // royal orange\r\n          600: \"#f27e3a\", // vibrant orange\r\n          700: \"#f3a063\", // soft orange\r\n          800: \"#f5e0c7\", // light royal orange\r\n          900: \"#d0d1d5\", // light gray for light mode\r\n        },\r\n        blueAccent: {\r\n          100: \"#001720\", // midnight blue\r\n          200: \"#002540\", // navy blue\r\n          300: \"#003555\", // dark blue\r\n          400: \"#00476d\", // deep blue\r\n          500: \"#005f8d\", // royal blue\r\n          600: \"#0076b4\", // vibrant blue\r\n          700: \"#64a0d4\", // pastel blue\r\n          800: \"#8cb8e2\", // soft blue\r\n          900: \"#c0d9f0\", // light blue\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            primary: {\r\n              main: colors.primary[400],\r\n            },\r\n            secondary: {\r\n              main: colors.blueAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            primary: {\r\n              main: colors.primary[600],\r\n            },\r\n            secondary: {\r\n              main: colors.blueAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"dark\");\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}