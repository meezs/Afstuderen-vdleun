{"ast":null,"code":"var _jsxFileName = \"D:\\\\Afstuderen\\\\react-admin-dashboard\\\\src\\\\scenes\\\\invoices\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, useTheme } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport { tokens } from \"../../theme\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiquidTanks = _ref => {\n  _s();\n\n  let {\n    setWaterLevel,\n    onPumpToggle,\n    isPumping\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode); // Local water level state\n\n  const [waterLevel, localSetWaterLevel] = useState(75); // Starts at 75%\n  // Effect to decrease water level when pumping\n\n  useEffect(() => {\n    let interval;\n\n    if (isPumping && waterLevel > 0) {\n      interval = setInterval(() => {\n        localSetWaterLevel(prevLevel => {\n          const newLevel = Math.max(prevLevel - 0.1, 0); // Decrease water level\n\n          setWaterLevel(newLevel); // Update the water level in Dashboard\n\n          return newLevel;\n        });\n      }, 100); // Adjust speed of decrease (100ms)\n    }\n\n    return () => clearInterval(interval); // Cleanup on unmount or when isPumping changes\n  }, [isPumping, waterLevel, setWaterLevel]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Tanks\",\n      subtitle: \"All liquid holding tanks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: isPumping ? \"error\" : \"primary\" // Change button color based on pumping state\n        ,\n        variant: \"contained\",\n        onClick: onPumpToggle,\n        children: isPumping ? \"Stop Pump\" : \"Run Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiquidTanks, \"k/OpVCuXWsZVPxnfouPwznU2+zs=\", false, function () {\n  return [useTheme];\n});\n\n_c = LiquidTanks;\nexport default LiquidTanks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiquidTanks\");","map":{"version":3,"names":["Box","Button","useTheme","Header","tokens","useEffect","useState","LiquidTanks","setWaterLevel","onPumpToggle","isPumping","theme","colors","palette","mode","waterLevel","localSetWaterLevel","interval","setInterval","prevLevel","newLevel","Math","max","clearInterval"],"sources":["D:/Afstuderen/react-admin-dashboard/src/scenes/invoices/index.jsx"],"sourcesContent":["import { Box, Button, useTheme } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LiquidTanks = ({ setWaterLevel, onPumpToggle, isPumping }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  \r\n  // Local water level state\r\n  const [waterLevel, localSetWaterLevel] = useState(75); // Starts at 75%\r\n\r\n  // Effect to decrease water level when pumping\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isPumping && waterLevel > 0) {\r\n      interval = setInterval(() => {\r\n        localSetWaterLevel((prevLevel) => {\r\n          const newLevel = Math.max(prevLevel - 0.1, 0); // Decrease water level\r\n          setWaterLevel(newLevel); // Update the water level in Dashboard\r\n          return newLevel;\r\n        });\r\n      }, 100); // Adjust speed of decrease (100ms)\r\n    }\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount or when isPumping changes\r\n  }, [isPumping, waterLevel, setWaterLevel]);\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Tanks\" subtitle=\"All liquid holding tanks\" />\r\n      <Box display=\"flex\" justifyContent=\"center\" mt=\"20px\">\r\n        <Button \r\n          color={isPumping ? \"error\" : \"primary\"} // Change button color based on pumping state\r\n          variant=\"contained\" \r\n          onClick={onPumpToggle}\r\n        >\r\n          {isPumping ? \"Stop Pump\" : \"Run Pump\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LiquidTanks;\r\n"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,eAAtC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAG,QAAgD;EAAA;;EAAA,IAA/C;IAAEC,aAAF;IAAiBC,YAAjB;IAA+BC;EAA/B,CAA+C;EAClE,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;EACA,MAAMU,MAAM,GAAGR,MAAM,CAACO,KAAK,CAACE,OAAN,CAAcC,IAAf,CAArB,CAFkE,CAIlE;;EACA,MAAM,CAACC,UAAD,EAAaC,kBAAb,IAAmCV,QAAQ,CAAC,EAAD,CAAjD,CALkE,CAKX;EAEvD;;EACAD,SAAS,CAAC,MAAM;IACd,IAAIY,QAAJ;;IACA,IAAIP,SAAS,IAAIK,UAAU,GAAG,CAA9B,EAAiC;MAC/BE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BF,kBAAkB,CAAEG,SAAD,IAAe;UAChC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,SAAS,GAAG,GAArB,EAA0B,CAA1B,CAAjB,CADgC,CACe;;UAC/CX,aAAa,CAACY,QAAD,CAAb,CAFgC,CAEP;;UACzB,OAAOA,QAAP;QACD,CAJiB,CAAlB;MAKD,CANqB,EAMnB,GANmB,CAAtB,CAD+B,CAOtB;IACV;;IAED,OAAO,MAAMG,aAAa,CAACN,QAAD,CAA1B,CAZc,CAYwB;EACvC,CAbQ,EAaN,CAACP,SAAD,EAAYK,UAAZ,EAAwBP,aAAxB,CAbM,CAAT;EAeA,oBACE,QAAC,GAAD;IAAK,CAAC,EAAC,MAAP;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC,OAAd;MAAsB,QAAQ,EAAC;IAA/B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,GAAD;MAAK,OAAO,EAAC,MAAb;MAAoB,cAAc,EAAC,QAAnC;MAA4C,EAAE,EAAC,MAA/C;MAAA,uBACE,QAAC,MAAD;QACE,KAAK,EAAEE,SAAS,GAAG,OAAH,GAAa,SAD/B,CAC0C;QAD1C;QAEE,OAAO,EAAC,WAFV;QAGE,OAAO,EAAED,YAHX;QAAA,UAKGC,SAAS,GAAG,WAAH,GAAiB;MAL7B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CArCD;;GAAMH,W;UACUL,Q;;;KADVK,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}