{"ast":null,"code":"var _jsxFileName = \"D:\\\\Afstuderen\\\\react-admin-dashboard\\\\src\\\\scenes\\\\invoices\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, useTheme } from \"@mui/material\";\nimport Header from \"../../components/Header\";\nimport { tokens } from \"../../theme\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LiquidTanks = () => {\n  _s();\n\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode); // Set the water level as a percentage (0 to 100)\n\n  const [waterLevel, setWaterLevel] = useState(75); // Example: starts at 75%\n\n  const [isPumping, setIsPumping] = useState(false); // State to manage pump action\n  // Effect to decrease water level when pumping\n\n  useEffect(() => {\n    let interval;\n\n    if (isPumping && waterLevel > 0) {\n      interval = setInterval(() => {\n        setWaterLevel(prevLevel => Math.max(prevLevel - 0.1, 0)); // Decrease water level\n      }, 100); // Adjust speed of decrease (100ms)\n    }\n\n    return () => clearInterval(interval); // Cleanup on unmount or when isPumping changes\n  }, [isPumping, waterLevel]);\n\n  const handlePumpButtonClick = () => {\n    setIsPumping(prev => !prev); // Toggle pumping state\n  }; // Create a wave path based on the current water level\n\n\n  const waveHeight = 10; // Height of the wave\n\n  const wavePath = `M 0 ${100 - waterLevel} C 50 ${100 - waterLevel - waveHeight} 150 ${100 - waterLevel + waveHeight} 250 ${100 - waterLevel} L 250 500 L 0 500 Z`;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Tanks\",\n      subtitle: \"All liquid holding tanks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      m: \"40px 0 0 0\",\n      height: 500 // Outer box height\n      ,\n      width: 500 // Outer box width\n      ,\n      display: \"flex\" // Corrected display property\n      ,\n      alignItems: \"flex-end\" // Aligns inner box to the bottom\n      ,\n      justifyContent: \"center\" // Center items horizontally\n      ,\n      border: \"1px solid\" // Optional: Add a border around the outer box\n      ,\n      borderColor: colors.grey[300] // Border color\n      ,\n      borderRadius: \"8px\" // Rounded corners for the outer box\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        height: `${waterLevel}%`,\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n            id: \"wave\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: wavePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"0\",\n          y: `${100 - waterLevel}%` // Position based on water level\n          ,\n          width: \"100%\",\n          height: \"100%\",\n          fill: \"darkBlue\",\n          clipPath: \"url(#wave)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        color: \"white\" // Set text color\n        ,\n        height: \"100%\" // Full height for the text box\n        ,\n        width: \"100%\" // Full width of the container\n        ,\n        position: \"absolute\" // Position text over the SVG\n        ,\n        display: \"flex\" // Use flexbox for inner box\n        ,\n        alignItems: \"center\" // Center text vertically\n        ,\n        justifyContent: \"center\" // Center text horizontally\n        ,\n        children: [\"Water Level: \", waterLevel.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: isPumping ? \"error\" : \"primary\" // Change button color based on state\n        ,\n        variant: \"contained\",\n        onClick: handlePumpButtonClick,\n        children: isPumping ? \"Stop Pump\" : \"Run Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LiquidTanks, \"HmgFyV3Td4387W5gTRcxlXgpAjI=\", false, function () {\n  return [useTheme];\n});\n\n_c = LiquidTanks;\nexport default LiquidTanks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiquidTanks\");","map":{"version":3,"names":["Box","Button","useTheme","Header","tokens","useEffect","useState","LiquidTanks","theme","colors","palette","mode","waterLevel","setWaterLevel","isPumping","setIsPumping","interval","setInterval","prevLevel","Math","max","clearInterval","handlePumpButtonClick","prev","waveHeight","wavePath","grey","toFixed"],"sources":["D:/Afstuderen/react-admin-dashboard/src/scenes/invoices/index.jsx"],"sourcesContent":["import { Box, Button, useTheme } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LiquidTanks = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  // Set the water level as a percentage (0 to 100)\r\n  const [waterLevel, setWaterLevel] = useState(75); // Example: starts at 75%\r\n  const [isPumping, setIsPumping] = useState(false); // State to manage pump action\r\n\r\n  // Effect to decrease water level when pumping\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isPumping && waterLevel > 0) {\r\n      interval = setInterval(() => {\r\n        setWaterLevel((prevLevel) => Math.max(prevLevel - 0.1, 0)); // Decrease water level\r\n      }, 100); // Adjust speed of decrease (100ms)\r\n    }\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount or when isPumping changes\r\n  }, [isPumping, waterLevel]);\r\n\r\n  const handlePumpButtonClick = () => {\r\n    setIsPumping((prev) => !prev); // Toggle pumping state\r\n  };\r\n\r\n  // Create a wave path based on the current water level\r\n  const waveHeight = 10; // Height of the wave\r\n  const wavePath = `M 0 ${100 - waterLevel} C 50 ${100 - waterLevel - waveHeight} 150 ${100 - waterLevel + waveHeight} 250 ${100 - waterLevel} L 250 500 L 0 500 Z`;\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Tanks\" subtitle=\"All liquid holding tanks\" />\r\n      <Box\r\n        m=\"40px 0 0 0\"\r\n        height={500} // Outer box height\r\n        width={500} // Outer box width\r\n        display=\"flex\" // Corrected display property\r\n        alignItems=\"flex-end\" // Aligns inner box to the bottom\r\n        justifyContent=\"center\" // Center items horizontally\r\n        border=\"1px solid\" // Optional: Add a border around the outer box\r\n        borderColor={colors.grey[300]} // Border color\r\n        borderRadius=\"8px\" // Rounded corners for the outer box\r\n      >\r\n        {/* Wavy Top Water Level Box */}\r\n        <svg height={`${waterLevel}%`} width=\"100%\">\r\n          <defs>\r\n            <clipPath id=\"wave\">\r\n              <path d={wavePath} />\r\n            </clipPath>\r\n          </defs>\r\n          <rect\r\n            x=\"0\"\r\n            y={`${100 - waterLevel}%`} // Position based on water level\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            fill=\"darkBlue\"\r\n            clipPath=\"url(#wave)\"\r\n          />\r\n        </svg>\r\n        <Box\r\n          color={\"white\"} // Set text color\r\n          height=\"100%\" // Full height for the text box\r\n          width=\"100%\" // Full width of the container\r\n          position=\"absolute\" // Position text over the SVG\r\n          display=\"flex\" // Use flexbox for inner box\r\n          alignItems=\"center\" // Center text vertically\r\n          justifyContent=\"center\" // Center text horizontally\r\n        >\r\n          Water Level: {waterLevel.toFixed(2)}%\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"center\" mt=\"20px\">\r\n        <Button\r\n          color={isPumping ? \"error\" : \"primary\"} // Change button color based on state\r\n          variant=\"contained\"\r\n          onClick={handlePumpButtonClick}\r\n        >\r\n          {isPumping ? \"Stop Pump\" : \"Run Pump\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LiquidTanks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}