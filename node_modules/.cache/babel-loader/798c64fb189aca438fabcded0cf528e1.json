{"ast":null,"code":"var _jsxFileName = \"D:\\\\Afstuderen\\\\react-admin-dashboard\\\\src\\\\scenes\\\\form\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button } from \"@mui/material\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Header from \"../../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\"); // Initial state for circle properties\n\n  const initialCircleProps = [{\n    color: \"red\",\n    blink: true,\n    text: \"Fuel alarm\",\n    text2: \"Warning! code 8454\"\n  }, {\n    color: \"green\",\n    blink: false,\n    text: \"Pressure alarm\",\n    text2: \"\"\n  }, {\n    color: \"green\",\n    blink: false,\n    text: \"Water alarm\",\n    text2: \"\"\n  }, {\n    color: \"green\",\n    blink: false,\n    text: \"Depth alarm\",\n    text2: \"\"\n  }, {\n    color: \"red\",\n    blink: true,\n    text: \"Temperature alarm\",\n    text2: \"Warning! code 4354\"\n  }, {\n    color: \"green\",\n    blink: false,\n    text: \"Water alarm\",\n    text2: \"\"\n  }, {\n    color: \"green\",\n    blink: false,\n    text: \"Bilge alarm\",\n    text2: \"\"\n  }, {\n    color: \"red\",\n    blink: true,\n    text: \"Fire alarm\",\n    text2: \"Warning! code 83544\"\n  }]; // State to manage circle properties\n\n  const [circleProps, setCircleProps] = useState(initialCircleProps);\n  const [timer, setTimer] = useState(10); // Countdown timer starts at 10 seconds\n\n  const handleActionButtonClick = () => {\n    // Update all circles to green and not blinking\n    setCircleProps(prevProps => {\n      const newProps = [...prevProps];\n      newProps.forEach((circle, index) => {\n        newProps[index] = { ...circle,\n          color: \"green\",\n          blink: false\n        };\n      });\n      setTimer(5); // Reset timer to 5 seconds\n\n      return newProps;\n    });\n  };\n\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000); // Decrease timer every second\n\n      return () => clearInterval(interval); // Cleanup on component unmount or timer change\n    } else {\n      // Reset specific circles to their original state after the timer runs out\n      setCircleProps(prevProps => {\n        const newProps = [...prevProps];\n        newProps[2] = {\n          color: \"red\",\n          blink: true,\n          text: \"Water alarm\"\n        };\n        newProps[7] = {\n          color: \"red\",\n          blink: true,\n          text: \"Fire alarm\"\n        }; // Change back to original state\n\n        return newProps;\n      });\n    }\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"ALARM STATUS\",\n      subtitle: \"Check the status of your alarms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gap: \"30px\",\n      gridTemplateColumns: \"repeat(4, 1fr)\" // 4 columns\n      ,\n      sx: {\n        \"& > div\": {\n          gridColumn: isNonMobile ? \"span 1\" : \"span 4\"\n        }\n      },\n      children: circleProps.map((circle, index) => /*#__PURE__*/_jsxDEV(CircleBox, {\n        color: circle.color,\n        blink: circle.blink,\n        text: circle.text,\n        text2: circle.text2\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"end\",\n      mt: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: handleActionButtonClick,\n        children: \"Reset alarms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"PI/32rDmt8xf1QD3rhr9C2LIlok=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Form;\n\nconst CircleBox = _ref => {\n  _s2();\n\n  let {\n    color,\n    blink,\n    text\n  } = _ref;\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    if (blink) {\n      const interval = setInterval(() => {\n        setIsVisible(prev => !prev);\n      }, 500); // Blink every 500ms\n\n      return () => clearInterval(interval);\n    } else {\n      setIsVisible(true); // Ensure the circle is visible if not blinking\n    }\n  }, [blink]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: \"32px\",\n      // Increased padding\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      textAlign: \"center\",\n      minHeight: \"150px\",\n      // Increased height for the box\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      // Aligns the circle to the bottom\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"40px\",\n        // Width of the circle\n        height: \"40px\",\n        // Height of the circle\n        borderRadius: \"50%\",\n        // Makes it a circle\n        backgroundColor: color,\n        // Circle color\n        mt: \"16px\",\n        // Margin-top to space it from the text\n        opacity: isVisible ? 1 : 0,\n        // Controls visibility for blinking effect\n        transition: \"opacity 0.5s\" // Smooth transition for blinking\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CircleBox, \"m22S9IQwDfEe/fCJY7LYj8YPDMo=\");\n\n_c2 = CircleBox;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"CircleBox\");","map":{"version":3,"names":["Box","Button","useMediaQuery","Header","useEffect","useState","Form","isNonMobile","initialCircleProps","color","blink","text","text2","circleProps","setCircleProps","timer","setTimer","handleActionButtonClick","prevProps","newProps","forEach","circle","index","interval","setInterval","prevTimer","clearInterval","gridColumn","map","CircleBox","isVisible","setIsVisible","prev","padding","border","borderRadius","textAlign","minHeight","display","flexDirection","justifyContent","alignItems","width","height","backgroundColor","mt","opacity","transition"],"sources":["D:/Afstuderen/react-admin-dashboard/src/scenes/form/index.jsx"],"sourcesContent":["import { Box, Button } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Header from \"../../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Form = () => {\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Initial state for circle properties\r\n  const initialCircleProps = [\r\n    { color: \"red\", blink: true, text: \"Fuel alarm\", text2: \"Warning! code 8454\" },\r\n    { color: \"green\", blink: false, text: \"Pressure alarm\", text2: \"\" },\r\n    { color: \"green\", blink: false, text: \"Water alarm\" , text2: \"\"},\r\n    { color: \"green\", blink: false, text: \"Depth alarm\", text2: \"\" },\r\n    { color: \"red\", blink: true, text: \"Temperature alarm\" , text2: \"Warning! code 4354\"},\r\n    { color: \"green\", blink: false, text: \"Water alarm\", text2: \"\" },\r\n    { color: \"green\", blink: false, text: \"Bilge alarm\" , text2: \"\"},\r\n    { color: \"red\", blink: true, text: \"Fire alarm\", text2: \"Warning! code 83544\" },\r\n  ];\r\n\r\n  // State to manage circle properties\r\n  const [circleProps, setCircleProps] = useState(initialCircleProps);\r\n  const [timer, setTimer] = useState(10); // Countdown timer starts at 10 seconds\r\n\r\n  const handleActionButtonClick = () => {\r\n    // Update all circles to green and not blinking\r\n    setCircleProps((prevProps) => {\r\n      const newProps = [...prevProps];\r\n      newProps.forEach((circle, index) => {\r\n        newProps[index] = { ...circle, color: \"green\", blink: false };\r\n      });\r\n      setTimer(5); // Reset timer to 5 seconds\r\n      return newProps;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timer > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000); // Decrease timer every second\r\n\r\n      return () => clearInterval(interval); // Cleanup on component unmount or timer change\r\n    } else {\r\n      // Reset specific circles to their original state after the timer runs out\r\n      setCircleProps((prevProps) => {\r\n        const newProps = [...prevProps];\r\n        newProps[2] = { color: \"red\", blink: true, text: \"Water alarm\" };\r\n        newProps[7] = { color: \"red\", blink: true, text: \"Fire alarm\" }; // Change back to original state\r\n        return newProps;\r\n      });\r\n    }\r\n  }, [timer]);\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"ALARM STATUS\" subtitle=\"Check the status of your alarms\" />\r\n\r\n      <Box\r\n        display=\"grid\"\r\n        gap=\"30px\"\r\n        gridTemplateColumns=\"repeat(4, 1fr)\" // 4 columns\r\n        sx={{\r\n          \"& > div\": { gridColumn: isNonMobile ? \"span 1\" : \"span 4\" },\r\n        }}\r\n      >\r\n        {circleProps.map((circle, index) => (\r\n          <CircleBox key={index} color={circle.color} blink={circle.blink} text={circle.text} text2={circle.text2}/>\r\n        ))}\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={handleActionButtonClick}>\r\n          Reset alarms\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CircleBox = ({ color, blink, text }) => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (blink) {\r\n      const interval = setInterval(() => {\r\n        setIsVisible((prev) => !prev);\r\n      }, 500); // Blink every 500ms\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setIsVisible(true); // Ensure the circle is visible if not blinking\r\n    }\r\n  }, [blink]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"32px\", // Increased padding\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        textAlign: \"center\",\r\n        minHeight: \"150px\", // Increased height for the box\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\", // Aligns the circle to the bottom\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div>{text}</div> {/* Display individual text */}\r\n      <Box\r\n        sx={{\r\n          width: \"40px\", // Width of the circle\r\n          height: \"40px\", // Height of the circle\r\n          borderRadius: \"50%\", // Makes it a circle\r\n          backgroundColor: color, // Circle color\r\n          mt: \"16px\", // Margin-top to space it from the text\r\n          opacity: isVisible ? 1 : 0, // Controls visibility for blinking effect\r\n          transition: \"opacity 0.5s\", // Smooth transition for blinking\r\n        }}\r\n      />\r\n      <div>{text2}</div> {/* Display text below the circle */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}