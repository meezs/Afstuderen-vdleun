{"ast":null,"code":"var _jsxFileName = \"D:\\\\Afstuderen\\\\react-admin-dashboard\\\\src\\\\scenes\\\\global\\\\Topbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Topbar = () => {\n  _s();\n\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const colorMode = useContext(ColorModeContext);\n  const [dateTime, setDateTime] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDateTime(new Date());\n    }, 1000); // Update every second\n\n    return () => clearInterval(timer); // Cleanup timer on unmount\n  }, []);\n\n  const formatDate = date => {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString(undefined, options);\n  };\n\n  const formatTime = date => {\n    return date.toLocaleTimeString(undefined, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: colorMode.toggleColorMode,\n        children: theme.palette.mode === \"dark\" ? /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(LightModeOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: colors.grey[100],\n        sx: {\n          mr: 2\n        },\n        children: formatDate(dateTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: colors.grey[100],\n        children: formatTime(dateTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topbar, \"a7ufJSQpyvo9NMqajc501/oaxI4=\", false, function () {\n  return [useTheme];\n});\n\n_c = Topbar;\nexport default Topbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["Box","IconButton","Typography","useTheme","useContext","useEffect","useState","ColorModeContext","tokens","LightModeOutlinedIcon","DarkModeOutlinedIcon","Topbar","theme","colors","palette","mode","colorMode","dateTime","setDateTime","Date","timer","setInterval","clearInterval","formatDate","date","options","weekday","year","month","day","toLocaleDateString","undefined","formatTime","toLocaleTimeString","hour","minute","second","toggleColorMode","grey","mr"],"sources":["D:/Afstuderen/react-admin-dashboard/src/scenes/global/Topbar.jsx"],"sourcesContent":["import { Box, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { ColorModeContext, tokens } from \"../../theme\";\r\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\r\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\r\n\r\nconst Topbar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const colorMode = useContext(ColorModeContext);\r\n\r\n  const [dateTime, setDateTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDateTime(new Date());\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(timer); // Cleanup timer on unmount\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    return date.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit', second: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\r\n      {/* ICONS */}\r\n      <Box display=\"flex\">\r\n        <IconButton onClick={colorMode.toggleColorMode}>\r\n          {theme.palette.mode === \"dark\" ? (\r\n            <DarkModeOutlinedIcon />\r\n          ) : (\r\n            <LightModeOutlinedIcon />\r\n          )}\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {/* CURRENT DATE & TIME */}\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Typography variant=\"h6\" color={colors.grey[100]} sx={{ mr: 2 }}>\r\n          {formatDate(dateTime)}\r\n        </Typography>\r\n        <Typography variant=\"h6\" color={colors.grey[100]}>\r\n          {formatTime(dateTime)}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,eAAtD;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,gBAAT,EAA2BC,MAA3B,QAAyC,aAAzC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;EACA,MAAMU,MAAM,GAAGL,MAAM,CAACI,KAAK,CAACE,OAAN,CAAcC,IAAf,CAArB;EACA,MAAMC,SAAS,GAAGZ,UAAU,CAACG,gBAAD,CAA5B;EAEA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAAxC;EAEAd,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BH,WAAW,CAAC,IAAIC,IAAJ,EAAD,CAAX;IACD,CAFwB,EAEtB,IAFsB,CAAzB,CADc,CAGJ;;IAEV,OAAO,MAAMG,aAAa,CAACF,KAAD,CAA1B,CALc,CAKqB;EACpC,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMG,UAAU,GAAIC,IAAD,IAAU;IAC3B,MAAMC,OAAO,GAAG;MAAEC,OAAO,EAAE,MAAX;MAAmBC,IAAI,EAAE,SAAzB;MAAoCC,KAAK,EAAE,MAA3C;MAAmDC,GAAG,EAAE;IAAxD,CAAhB;IACA,OAAOL,IAAI,CAACM,kBAAL,CAAwBC,SAAxB,EAAmCN,OAAnC,CAAP;EACD,CAHD;;EAKA,MAAMO,UAAU,GAAIR,IAAD,IAAU;IAC3B,OAAOA,IAAI,CAACS,kBAAL,CAAwBF,SAAxB,EAAmC;MAAEG,IAAI,EAAE,SAAR;MAAmBC,MAAM,EAAE,SAA3B;MAAsCC,MAAM,EAAE;IAA9C,CAAnC,CAAP;EACD,CAFD;;EAIA,oBACE,QAAC,GAAD;IAAK,OAAO,EAAC,MAAb;IAAoB,cAAc,EAAC,eAAnC;IAAmD,CAAC,EAAE,CAAtD;IAAA,wBAEE,QAAC,GAAD;MAAK,OAAO,EAAC,MAAb;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAEpB,SAAS,CAACqB,eAA/B;QAAA,UACGzB,KAAK,CAACE,OAAN,CAAcC,IAAd,KAAuB,MAAvB,gBACC,QAAC,oBAAD;UAAA;UAAA;UAAA;QAAA,QADD,gBAGC,QAAC,qBAAD;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAaE,QAAC,GAAD;MAAK,OAAO,EAAC,MAAb;MAAoB,UAAU,EAAC,QAA/B;MAAA,wBACE,QAAC,UAAD;QAAY,OAAO,EAAC,IAApB;QAAyB,KAAK,EAAEF,MAAM,CAACyB,IAAP,CAAY,GAAZ,CAAhC;QAAkD,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAN,CAAtD;QAAA,UACGhB,UAAU,CAACN,QAAD;MADb;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,UAAD;QAAY,OAAO,EAAC,IAApB;QAAyB,KAAK,EAAEJ,MAAM,CAACyB,IAAP,CAAY,GAAZ,CAAhC;QAAA,UACGN,UAAU,CAACf,QAAD;MADb;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAhDD;;GAAMN,M;UACUR,Q;;;KADVQ,M;AAkDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}